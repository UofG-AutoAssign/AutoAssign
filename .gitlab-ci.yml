image: node:16.5.0

# Define the pipeline stages
stages:
  - build
  - test
  - quality

# Define the jobs
build-backend:
  stage: build
  image: python:3.8 
  before_script:
    # Install dependencies
    - pip install --upgrade pip
    - cd "AutoAssign"
    - pip install -r requirements.txt
  script:
    # Build the Django backend
    - python manage.py makemigrations
    - python manage.py migrate

build-frontend:
  stage: build
  cache:
    key:
      files:
        - client/package-lock.json
      prefix: npm
    paths:
      - client/node_modules/
  script:
    - cd "client"
    - npm install
    - npm run build
    - cp -a dist/. ../public/
    - cd ..
  artifacts:
    paths:
      - public

test-backend:
  stage: test
  image: python:3.8 
  before_script:
    # Install dependencies
    - pip install --upgrade pip
    - cd "AutoAssign"
    - pip install -r requirements.txt
  script:
    # Run the Django backend tests
    - python manage.py test

backend_code_quality_pylint:
  stage: quality
  image: python:3.8
  before_script:
    # Install dependencies
    - pip install --upgrade pip
    - cd "AutoAssign"
    - pip install -r requirements.txt
    - pip install pylint pylint-django
  script:
    # Run pylint to check for coding style issues and other code quality problems
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 path/to/ext
    - cd "Assign"
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 path/to/views.py
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 path/to/serializers.py
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 path/to/models.py

  artifacts:
    paths:
      - htmlcov/