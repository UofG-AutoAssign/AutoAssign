image: python:3.8-alpine

# Define the pipeline stages
stages:
  - backend_build_test_quality
  - frontend_build_test_quality

# Define the backend jobs
backend_build:
  stage: backend_build_test_quality
  before_script:
    # Install dependencies
    - apk add --no-cache build-base
    - pip install --upgrade pip
    - cd "AutoAssign"
    - pip install --no-cache-dir -r requirements.txt
  script:
    # Build the Django backend
    - python manage.py makemigrations
    - python manage.py migrate

backend_test:
  stage: backend_build_test_quality
  before_script:
    # Install dependencies
    - apk add --no-cache build-base
    - pip install --upgrade pip
    - cd "AutoAssign"
    - pip install --no-cache-dir -r requirements.txt
  script:
    # Run the Django backend tests
    - python manage.py test

backend_quality:
  stage: backend_build_test_quality
  before_script:
    # Install dependencies
    - apk add --no-cache build-base
    - pip install --upgrade pip
    - cd "AutoAssign"
    - pip install --no-cache-dir pylint pylint-django
  script:
    # Run pylint to check for coding style issues and other code quality problems
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 ext
    - cd "Assign"
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 views.py
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 serializers.py
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 models.py
    - pylint --disable=C0114,C0115,R0903,C0116,E1101,W0105,W0613,E0401 alg.py

  artifacts:
    paths:
      - htmlcov/

# Define the frontend jobs
frontend_build:
  stage: frontend_build_test_quality
  cache:
    key:
      files:
        - client/package-lock.json
      prefix: npm
    paths:
      - client/node_modules/
  image: node:16.5.0-alpine
  script:
    - cd "client"
    - npm install
    - npm run build
    - cp -a dist/. ../public/
    - cd ..
  artifacts:
    paths:
      - public

frontend_quality:
  stage: frontend_build_test_quality
  image: node:16.5.0
  before_script:
    # Install dependencies
    - cd "client"
    - npm install
    - npm install eslint eslint-plugin-react @typescript-eslint/parser @typescript-eslint/eslint-plugin
  script:
    - npx eslint --ext .tsx --ext .ts